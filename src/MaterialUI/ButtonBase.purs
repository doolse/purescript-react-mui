module MaterialUI.ButtonBase where

-- This file is autogenerated from the typescript binding

import Prelude
import React (ReactClass, ReactElement, createElement)
import MaterialUI.Event (Event)
import MaterialUI.PropTypes (Untyped, StandardPropsExt, class IsReactType, ReactType, EventHandler)
import MaterialUI.Properties (mkPropRecord, mkProp, IProp)
import Unsafe.Coerce (unsafeCoerce)

foreign import buttonBaseClass :: forall props. ReactClass props


type ButtonBasePropsExt r = StandardPropsExt (
  buttonRef :: Untyped {-React.Ref-},
  centerRipple :: Boolean,
  component :: ReactType,
  disableRipple :: Boolean,
  focusRipple :: Boolean,
  keyboardFocusedClassName :: String,
  onKeyboardFocus :: Untyped {-React.FocusEventHandler-},
  onClick :: EventHandler Event
  | r
) 

type ButtonBaseProps = ButtonBasePropsExt (

) 


buttonRef :: forall r a. a -> IProp (buttonRef :: Untyped | r)
buttonRef = mkProp "buttonRef" <<< (unsafeCoerce :: a -> Untyped)

centerRipple :: forall r. Boolean -> IProp (centerRipple :: Boolean | r)
centerRipple = mkProp "centerRipple"

disableRipple :: forall r. Boolean -> IProp (disableRipple :: Boolean | r)
disableRipple = mkProp "disableRipple"

focusRipple :: forall r. Boolean -> IProp (focusRipple :: Boolean | r)
focusRipple = mkProp "focusRipple"

keyboardFocusedClassName :: forall r. String -> IProp (keyboardFocusedClassName :: String | r)
keyboardFocusedClassName = mkProp "keyboardFocusedClassName"

onKeyboardFocus :: forall r a. a -> IProp (onKeyboardFocus :: Untyped | r)
onKeyboardFocus = mkProp "onKeyboardFocus" <<< (unsafeCoerce :: a -> Untyped)

onClick :: forall r. EventHandler Event -> IProp (onClick :: EventHandler Event | r)
onClick = mkProp "onClick"

buttonBaseU :: forall props. props -> Array ReactElement -> ReactElement
buttonBaseU = createElement buttonBaseClass

buttonBase :: Array (IProp ButtonBaseProps) -> Array ReactElement -> ReactElement
buttonBase = mkPropRecord >>> buttonBaseU

buttonBase_ :: Array ReactElement -> ReactElement
buttonBase_ = buttonBaseU {}

