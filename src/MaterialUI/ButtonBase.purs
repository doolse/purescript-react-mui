module MaterialUI.ButtonBase where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.Event (Event)
import MaterialUI.PropTypes (StandardPropsExt, Untyped, EventHandler, ReactType)
import MaterialUI.Properties (mkProp, IProp, mkPropRecord)
import React (ReactElement, createElement, ReactClass)
import Unsafe.Coerce (unsafeCoerce)

type ButtonBasePropsExt r = StandardPropsExt (
  buttonRef :: Untyped {-React.Ref-},
  centerRipple :: Boolean,
  component :: ReactType,
  disableRipple :: Boolean,
  focusRipple :: Boolean,
  onKeyboardFocus :: Untyped {-React.FocusEventHandler-},
  "TouchRippleProps" :: Untyped {-Identifier:Partial-},
  onClick :: EventHandler Event
  | r
) 

type ButtonBaseProps = ButtonBasePropsExt (

) 


buttonRef :: forall r a. a -> IProp (buttonRef :: Untyped | r)
buttonRef = mkProp "buttonRef" <<< (unsafeCoerce :: a -> Untyped)

centerRipple :: forall r. Boolean -> IProp (centerRipple :: Boolean | r)
centerRipple = mkProp "centerRipple"

disableRipple :: forall r. Boolean -> IProp (disableRipple :: Boolean | r)
disableRipple = mkProp "disableRipple"

focusRipple :: forall r. Boolean -> IProp (focusRipple :: Boolean | r)
focusRipple = mkProp "focusRipple"

onKeyboardFocus :: forall r a. a -> IProp (onKeyboardFocus :: Untyped | r)
onKeyboardFocus = mkProp "onKeyboardFocus" <<< (unsafeCoerce :: a -> Untyped)

touchRippleProps :: forall r a. a -> IProp ("TouchRippleProps" :: Untyped | r)
touchRippleProps = mkProp "TouchRippleProps" <<< (unsafeCoerce :: a -> Untyped)

onClick :: forall r. EventHandler Event -> IProp (onClick :: EventHandler Event | r)
onClick = mkProp "onClick"

foreign import buttonBaseClass :: forall props. ReactClass props

buttonBaseU :: forall props. props -> Array ReactElement -> ReactElement
buttonBaseU = createElement buttonBaseClass

buttonBase :: Array (IProp ButtonBaseProps) -> Array ReactElement -> ReactElement
buttonBase = mkPropRecord >>> buttonBaseU

buttonBase_ :: Array ReactElement -> ReactElement
buttonBase_ = buttonBaseU {}
