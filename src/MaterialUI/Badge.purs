module MaterialUI.Badge where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.PropTypes (StdColor, ReactNode, ReactType, class IsReactNode, StandardPropsExt)
import MaterialUI.Properties (mkProp, Enum, mkPropRecord, IProp)
import React (unsafeCreateElement, ReactClass, ReactElement)
import Unsafe.Coerce (unsafeCoerce)

type BadgePropsExt r = StandardPropsExt (
  badgeContent :: ReactNode,
  color :: Enum (StdColor (error :: String)),
  component :: ReactType
  | r
) 

type BadgeProps = BadgePropsExt (

) 

error :: forall r. Enum (error :: String | r )
error = unsafeCoerce "error"

badgeContent :: forall r a. IsReactNode a => a -> IProp (badgeContent :: ReactNode | r)
badgeContent = mkProp "badgeContent" <<< (unsafeCoerce :: a -> ReactNode)

foreign import badgeClass :: forall props. ReactClass {|props}

badgeU :: forall props. {|props} -> Array ReactElement -> ReactElement
badgeU = unsafeCreateElement badgeClass

badge :: Array (IProp BadgeProps) -> Array ReactElement -> ReactElement
badge = mkPropRecord >>> badgeU

badge_ :: Array ReactElement -> ReactElement
badge_ = badgeU {}
