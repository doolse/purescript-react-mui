module MaterialUI.ExpansionPanelSummary where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.ButtonBase (ButtonBasePropsExt)
import MaterialUI.Event (Event)
import MaterialUI.PropTypes (ReactNode, EventHandler, class IsReactNode)
import MaterialUI.Properties (IProp, mkProp, mkPropRecord)
import React (ReactElement, createElement, ReactClass)
import Unsafe.Coerce (unsafeCoerce)

type ExpansionPanelSummaryPropsExt r = ButtonBasePropsExt (
  disabled :: Boolean,
  expanded :: Boolean,
  expandIcon :: ReactNode,
  onChange :: EventHandler Event
  | r
) 

type ExpansionPanelSummaryProps = ExpansionPanelSummaryPropsExt (

) 


disabled :: forall r. Boolean -> IProp (disabled :: Boolean | r)
disabled = mkProp "disabled"

expanded :: forall r. Boolean -> IProp (expanded :: Boolean | r)
expanded = mkProp "expanded"

expandIcon :: forall r a. IsReactNode a => a -> IProp (expandIcon :: ReactNode | r)
expandIcon = mkProp "expandIcon" <<< (unsafeCoerce :: a -> ReactNode)

foreign import expansionPanelSummaryClass :: forall props. ReactClass props

expansionPanelSummaryU :: forall props. props -> Array ReactElement -> ReactElement
expansionPanelSummaryU = createElement expansionPanelSummaryClass

expansionPanelSummary :: Array (IProp ExpansionPanelSummaryProps) -> Array ReactElement -> ReactElement
expansionPanelSummary = mkPropRecord >>> expansionPanelSummaryU

expansionPanelSummary_ :: Array ReactElement -> ReactElement
expansionPanelSummary_ = expansionPanelSummaryU {}
