module MaterialUI.Chip where

-- This file is autogenerated from the typescript binding

import Prelude
import React (ReactClass, ReactElement, createElement)
import MaterialUI.PropTypes (ReactNode, StandardPropsExt, Untyped, class IsReactNode, class IsReactType, ReactType)
import MaterialUI.Properties (mkPropRecord, mkProp, IProp)
import Unsafe.Coerce (unsafeCoerce)

foreign import chipClass :: forall props. ReactClass props


type ChipPropsExt r = StandardPropsExt (
  avatar :: Untyped {-React.ReactElement-},
  component :: ReactType,
  deleteIcon :: Untyped {-React.ReactElement-},
  label :: ReactNode,
  onDelete :: Untyped {-React.EventHandler-},
  onKeyDown :: Untyped {-React.EventHandler-}
  | r
) 

type ChipProps = ChipPropsExt (

) 


avatar :: forall r. Untyped -> IProp (avatar :: Untyped | r)
avatar = mkProp "avatar"

deleteIcon :: forall r. Untyped -> IProp (deleteIcon :: Untyped | r)
deleteIcon = mkProp "deleteIcon"

label :: forall r a. IsReactNode a => a -> IProp (label :: ReactNode | r)
label = mkProp "label" <<< (unsafeCoerce :: a -> ReactNode)

onDelete :: forall r. Untyped -> IProp (onDelete :: Untyped | r)
onDelete = mkProp "onDelete"

onKeyDown :: forall r. Untyped -> IProp (onKeyDown :: Untyped | r)
onKeyDown = mkProp "onKeyDown"

chipU :: forall props. props -> Array ReactElement -> ReactElement
chipU = createElement chipClass

chip :: Array (IProp ChipProps) -> Array ReactElement -> ReactElement
chip = mkPropRecord >>> chipU

chip_ :: Array ReactElement -> ReactElement
chip_ = chipU {}

