module MaterialUI.Chip where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.PropTypes (class IsReactNode, StdColor, ReactNode, ReactType, StandardPropsExt, EventHandler)
import MaterialUI.Properties (Enum, mkPropRecord, mkProp, IProp)
import React (unsafeCreateElement, ReactClass, ReactElement)
import React.SyntheticEvent (SyntheticEvent)
import Unsafe.Coerce (unsafeCoerce)

type ChipPropsExt r = StandardPropsExt (
  avatar :: ReactElement,
  clickable :: Boolean,
  color :: Enum (StdColor ()),
  component :: ReactType,
  deleteIcon :: ReactElement,
  label :: ReactNode,
  onDelete :: EventHandler SyntheticEvent,
  variant :: Enum (default :: String, outlined :: String)
  | r
) 

type ChipProps = ChipPropsExt (

) 

default :: forall r. Enum (default :: String | r )
default = unsafeCoerce "default"

outlined :: forall r. Enum (outlined :: String | r )
outlined = unsafeCoerce "outlined"

avatar :: forall r. ReactElement -> IProp (avatar :: ReactElement | r)
avatar = mkProp "avatar"

clickable :: forall r. Boolean -> IProp (clickable :: Boolean | r)
clickable = mkProp "clickable"

deleteIcon :: forall r. ReactElement -> IProp (deleteIcon :: ReactElement | r)
deleteIcon = mkProp "deleteIcon"

label :: forall r a. IsReactNode a => a -> IProp (label :: ReactNode | r)
label = mkProp "label" <<< (unsafeCoerce :: a -> ReactNode)

foreign import chipClass :: forall props. ReactClass {|props}

chipU :: forall props. {|props} -> Array ReactElement -> ReactElement
chipU = unsafeCreateElement chipClass

chip :: Array (IProp ChipProps) -> ReactElement
chip = mkPropRecord >>> chipU >>> (#) []

