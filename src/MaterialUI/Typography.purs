module MaterialUI.Typography where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.PropTypes (StandardPropsExt, Untyped, StdColor, ReactType)
import MaterialUI.Properties (IProp, mkPropRecord, mkProp, Enum)
import MaterialUI.TextStyle (TextStyle)
import React (ReactElement, createElement, ReactClass)
import Unsafe.Coerce (unsafeCoerce)

type TypographyPropsExt r = StandardPropsExt (
  align :: Untyped {-PropTypes.Alignment-},
  color :: Enum (StdColor (textSecondary :: String, error :: String)),
  component :: ReactType,
  gutterBottom :: Boolean,
  headlineMapping :: Untyped {-unknownType:MappedType-},
  noWrap :: Boolean,
  paragraph :: Boolean,
  variant :: TextStyle
  | r
) 

type TypographyProps = TypographyPropsExt (

) 

textsecondary :: forall r. Enum (textSecondary :: String | r )
textsecondary = unsafeCoerce "textSecondary"

error :: forall r. Enum (error :: String | r )
error = unsafeCoerce "error"

align :: forall r a. a -> IProp (align :: Untyped | r)
align = mkProp "align" <<< (unsafeCoerce :: a -> Untyped)

gutterBottom :: forall r. Boolean -> IProp (gutterBottom :: Boolean | r)
gutterBottom = mkProp "gutterBottom"

headlineMapping :: forall r a. a -> IProp (headlineMapping :: Untyped | r)
headlineMapping = mkProp "headlineMapping" <<< (unsafeCoerce :: a -> Untyped)

noWrap :: forall r. Boolean -> IProp (noWrap :: Boolean | r)
noWrap = mkProp "noWrap"

paragraph :: forall r. Boolean -> IProp (paragraph :: Boolean | r)
paragraph = mkProp "paragraph"

foreign import typographyClass :: forall props. ReactClass props

typographyU :: forall props. props -> Array ReactElement -> ReactElement
typographyU = createElement typographyClass

typography :: Array (IProp TypographyProps) -> Array ReactElement -> ReactElement
typography = mkPropRecord >>> typographyU

typography_ :: Array ReactElement -> ReactElement
typography_ = typographyU {}
