module MaterialUI.InputLabel where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.PropTypes (StandardPropsExt, Untyped)
import MaterialUI.Properties (mkProp, IProp, mkPropRecord)
import React (ReactElement, createElement, ReactClass)
import Unsafe.Coerce (unsafeCoerce)

type InputLabelPropsExt r = StandardPropsExt (
  disableAnimation :: Boolean,
  disabled :: Boolean,
  error :: Boolean,
  "FormLabelClasses" :: Untyped {-Identifier:Partial-},
  focused :: Boolean,
  required :: Boolean,
  shrink :: Boolean
  | r
) 

type InputLabelProps = InputLabelPropsExt (

) 


disableAnimation :: forall r. Boolean -> IProp (disableAnimation :: Boolean | r)
disableAnimation = mkProp "disableAnimation"

disabled :: forall r. Boolean -> IProp (disabled :: Boolean | r)
disabled = mkProp "disabled"

error :: forall r. Boolean -> IProp (error :: Boolean | r)
error = mkProp "error"

formLabelClasses :: forall r a. a -> IProp ("FormLabelClasses" :: Untyped | r)
formLabelClasses = mkProp "FormLabelClasses" <<< (unsafeCoerce :: a -> Untyped)

focused :: forall r. Boolean -> IProp (focused :: Boolean | r)
focused = mkProp "focused"

required :: forall r. Boolean -> IProp (required :: Boolean | r)
required = mkProp "required"

shrink :: forall r. Boolean -> IProp (shrink :: Boolean | r)
shrink = mkProp "shrink"

foreign import inputLabelClass :: forall props. ReactClass props

inputLabelU :: forall props. props -> Array ReactElement -> ReactElement
inputLabelU = createElement inputLabelClass

inputLabel :: Array (IProp InputLabelProps) -> Array ReactElement -> ReactElement
inputLabel = mkPropRecord >>> inputLabelU

inputLabel_ :: Array ReactElement -> ReactElement
inputLabel_ = inputLabelU {}
