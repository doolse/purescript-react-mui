module MaterialUI.LinearProgress where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.PropTypes (StandardPropsExt)
import MaterialUI.Properties (mkProp, IProp, Enum, mkPropRecord)
import React (ReactElement, createElement, ReactClass)
import Unsafe.Coerce (unsafeCoerce)

type LinearProgressPropsExt r = StandardPropsExt (
  color :: Enum (primary :: String, secondary :: String),
  value :: Int,
  valueBuffer :: Int,
  variant :: Enum (determinate :: String, indeterminate :: String, buffer :: String, query :: String)
  | r
) 

type LinearProgressProps = LinearProgressPropsExt (

) 

primary :: forall r. Enum (primary :: String | r )
primary = unsafeCoerce "primary"

secondary :: forall r. Enum (secondary :: String | r )
secondary = unsafeCoerce "secondary"

determinate :: forall r. Enum (determinate :: String | r )
determinate = unsafeCoerce "determinate"

indeterminate :: forall r. Enum (indeterminate :: String | r )
indeterminate = unsafeCoerce "indeterminate"

buffer :: forall r. Enum (buffer :: String | r )
buffer = unsafeCoerce "buffer"

query :: forall r. Enum (query :: String | r )
query = unsafeCoerce "query"

value :: forall r. Int -> IProp (value :: Int | r)
value = mkProp "value"

valueBuffer :: forall r. Int -> IProp (valueBuffer :: Int | r)
valueBuffer = mkProp "valueBuffer"

foreign import linearProgressClass :: forall props. ReactClass props

linearProgressU :: forall props. props -> Array ReactElement -> ReactElement
linearProgressU = createElement linearProgressClass

linearProgress :: Array (IProp LinearProgressProps) -> ReactElement
linearProgress = mkPropRecord >>> linearProgressU >>> (#) []

