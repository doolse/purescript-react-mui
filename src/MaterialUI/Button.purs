module MaterialUI.Button where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.ButtonBase (ButtonBasePropsExt)
import MaterialUI.Color (Color)
import MaterialUI.PropTypes (ReactType)
import MaterialUI.Properties (IProp, class IsProp, mkProp, mkPropRecord)
import React (createElement, ReactClass, ReactElement)

newtype Size = Size String
derive newtype instance isPropSize :: IsProp Size

newtype Variant = Variant String
derive newtype instance isPropVariant :: IsProp Variant

type ButtonPropsExt r = ButtonBasePropsExt (
  color :: Color,
  component :: ReactType,
  disabled :: Boolean,
  disableFocusRipple :: Boolean,
  disableRipple :: Boolean,
  fullWidth :: Boolean,
  href :: String,
  mini :: Boolean,
  size :: Size,
  type :: String,
  variant :: Variant
  | r
) 

type ButtonProps = ButtonPropsExt (

) 

small :: Size
small = Size "small"

medium :: Size
medium = Size "medium"

large :: Size
large = Size "large"

flat :: Variant
flat = Variant "flat"

raised :: Variant
raised = Variant "raised"

fab :: Variant
fab = Variant "fab"

disabled :: forall r. Boolean -> IProp (disabled :: Boolean | r)
disabled = mkProp "disabled"

disableFocusRipple :: forall r. Boolean -> IProp (disableFocusRipple :: Boolean | r)
disableFocusRipple = mkProp "disableFocusRipple"

disableRipple :: forall r. Boolean -> IProp (disableRipple :: Boolean | r)
disableRipple = mkProp "disableRipple"

fullWidth :: forall r. Boolean -> IProp (fullWidth :: Boolean | r)
fullWidth = mkProp "fullWidth"

href :: forall r. String -> IProp (href :: String | r)
href = mkProp "href"

mini :: forall r. Boolean -> IProp (mini :: Boolean | r)
mini = mkProp "mini"

size :: forall r. Size -> IProp (size :: Size | r)
size = mkProp "size"

foreign import buttonClass :: forall props. ReactClass props

buttonU :: forall props. props -> Array ReactElement -> ReactElement
buttonU = createElement buttonClass

button :: Array (IProp ButtonProps) -> Array ReactElement -> ReactElement
button = mkPropRecord >>> buttonU

button_ :: Array ReactElement -> ReactElement
button_ = buttonU {}
