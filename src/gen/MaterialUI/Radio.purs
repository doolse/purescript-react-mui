module MaterialUI.Radio where
import Data.TSCompat (Any, OneOf, OptionRecord, StringConst)
import Data.TSCompat.Class (class IsTSEq)
import Data.TSCompat.React (unsafeCreateElement, ReactNode)
import Data.Unit (Unit)
import Effect.Uncurried (EffectFn1, EffectFn2)
import React (unsafeCreateLeafElement, ReactClass, ReactElement)
import React.SyntheticEvent (SyntheticAnimationEvent, SyntheticClipboardEvent, SyntheticCompositionEvent, SyntheticEvent, SyntheticFocusEvent, SyntheticKeyboardEvent, SyntheticMouseEvent, SyntheticTouchEvent, SyntheticTransitionEvent, SyntheticUIEvent, SyntheticWheelEvent)

foreign import classRadio :: forall a. ReactClass a

type RadioPropsO r = (
  classes :: Any {-- unknown--}, 
  key :: OneOf (
    typed :: Number, 
    typed :: String
  ), 
  checkedIcon :: ReactNode, 
  color :: OneOf (
    typed :: StringConst "secondary", 
    typed :: StringConst "default", 
    typed :: StringConst "primary"
  ), 
  icon :: ReactNode, 
  hidden :: Boolean, 
  style :: Any {-- React.CSSProperties<>--}, 
  disabled :: Boolean, 
  defaultChecked :: Boolean, 
  defaultValue :: OneOf (
    typed :: Array String, 
    typed :: String
  ), 
  suppressContentEditableWarning :: Boolean, 
  suppressHydrationWarning :: Boolean, 
  accessKey :: String, 
  className :: String, 
  contentEditable :: Boolean, 
  contextMenu :: String, 
  dir :: String, 
  draggable :: Boolean, 
  id :: String, 
  lang :: String, 
  placeholder :: String, 
  slot :: String, 
  spellCheck :: Boolean, 
  tabIndex :: Number, 
  title :: String, 
  inputMode :: String, 
  is :: String, 
  radioGroup :: String, 
  role :: String, 
  about :: String, 
  datatype :: String, 
  inlist :: Any, 
  prefix :: String, 
  property :: String, 
  resource :: String, 
  typeof :: String, 
  vocab :: String, 
  autoCapitalize :: String, 
  autoCorrect :: String, 
  autoSave :: String, 
  itemProp :: String, 
  itemScope :: Boolean, 
  itemType :: String, 
  itemID :: String, 
  itemRef :: String, 
  results :: Number, 
  security :: String, 
  unselectable :: OneOf (
    typed :: StringConst "off", 
    typed :: StringConst "on"
  ), 
  dangerouslySetInnerHTML :: Record (
    "__html" :: String
  ), 
  onCopy :: EffectFn1 SyntheticClipboardEvent Unit, 
  onCopyCapture :: EffectFn1 SyntheticClipboardEvent Unit, 
  onCut :: EffectFn1 SyntheticClipboardEvent Unit, 
  onCutCapture :: EffectFn1 SyntheticClipboardEvent Unit, 
  onPaste :: EffectFn1 SyntheticClipboardEvent Unit, 
  onPasteCapture :: EffectFn1 SyntheticClipboardEvent Unit, 
  onCompositionEnd :: EffectFn1 SyntheticCompositionEvent Unit, 
  onCompositionEndCapture :: EffectFn1 SyntheticCompositionEvent Unit, 
  onCompositionStart :: EffectFn1 SyntheticCompositionEvent Unit, 
  onCompositionStartCapture :: EffectFn1 SyntheticCompositionEvent Unit, 
  onCompositionUpdate :: EffectFn1 SyntheticCompositionEvent Unit, 
  onCompositionUpdateCapture :: EffectFn1 SyntheticCompositionEvent Unit, 
  onFocus :: EffectFn1 SyntheticFocusEvent Unit, 
  onFocusCapture :: EffectFn1 SyntheticFocusEvent Unit, 
  onBlur :: EffectFn1 SyntheticFocusEvent Unit, 
  onBlurCapture :: EffectFn1 SyntheticFocusEvent Unit, 
  onChange :: EffectFn2 SyntheticEvent Boolean Unit, 
  onChangeCapture :: EffectFn1 SyntheticEvent Unit, 
  onInput :: EffectFn1 SyntheticEvent Unit, 
  onInputCapture :: EffectFn1 SyntheticEvent Unit, 
  onReset :: EffectFn1 SyntheticEvent Unit, 
  onResetCapture :: EffectFn1 SyntheticEvent Unit, 
  onSubmit :: EffectFn1 SyntheticEvent Unit, 
  onSubmitCapture :: EffectFn1 SyntheticEvent Unit, 
  onInvalid :: EffectFn1 SyntheticEvent Unit, 
  onInvalidCapture :: EffectFn1 SyntheticEvent Unit, 
  onLoad :: EffectFn1 SyntheticEvent Unit, 
  onLoadCapture :: EffectFn1 SyntheticEvent Unit, 
  onError :: EffectFn1 SyntheticEvent Unit, 
  onErrorCapture :: EffectFn1 SyntheticEvent Unit, 
  onKeyDown :: EffectFn1 SyntheticKeyboardEvent Unit, 
  onKeyDownCapture :: EffectFn1 SyntheticKeyboardEvent Unit, 
  onKeyPress :: EffectFn1 SyntheticKeyboardEvent Unit, 
  onKeyPressCapture :: EffectFn1 SyntheticKeyboardEvent Unit, 
  onKeyUp :: EffectFn1 SyntheticKeyboardEvent Unit, 
  onKeyUpCapture :: EffectFn1 SyntheticKeyboardEvent Unit, 
  onAbort :: EffectFn1 SyntheticEvent Unit, 
  onAbortCapture :: EffectFn1 SyntheticEvent Unit, 
  onCanPlay :: EffectFn1 SyntheticEvent Unit, 
  onCanPlayCapture :: EffectFn1 SyntheticEvent Unit, 
  onCanPlayThrough :: EffectFn1 SyntheticEvent Unit, 
  onCanPlayThroughCapture :: EffectFn1 SyntheticEvent Unit, 
  onDurationChange :: EffectFn1 SyntheticEvent Unit, 
  onDurationChangeCapture :: EffectFn1 SyntheticEvent Unit, 
  onEmptied :: EffectFn1 SyntheticEvent Unit, 
  onEmptiedCapture :: EffectFn1 SyntheticEvent Unit, 
  onEncrypted :: EffectFn1 SyntheticEvent Unit, 
  onEncryptedCapture :: EffectFn1 SyntheticEvent Unit, 
  onEnded :: EffectFn1 SyntheticEvent Unit, 
  onEndedCapture :: EffectFn1 SyntheticEvent Unit, 
  onLoadedData :: EffectFn1 SyntheticEvent Unit, 
  onLoadedDataCapture :: EffectFn1 SyntheticEvent Unit, 
  onLoadedMetadata :: EffectFn1 SyntheticEvent Unit, 
  onLoadedMetadataCapture :: EffectFn1 SyntheticEvent Unit, 
  onLoadStart :: EffectFn1 SyntheticEvent Unit, 
  onLoadStartCapture :: EffectFn1 SyntheticEvent Unit, 
  onPause :: EffectFn1 SyntheticEvent Unit, 
  onPauseCapture :: EffectFn1 SyntheticEvent Unit, 
  onPlay :: EffectFn1 SyntheticEvent Unit, 
  onPlayCapture :: EffectFn1 SyntheticEvent Unit, 
  onPlaying :: EffectFn1 SyntheticEvent Unit, 
  onPlayingCapture :: EffectFn1 SyntheticEvent Unit, 
  onProgress :: EffectFn1 SyntheticEvent Unit, 
  onProgressCapture :: EffectFn1 SyntheticEvent Unit, 
  onRateChange :: EffectFn1 SyntheticEvent Unit, 
  onRateChangeCapture :: EffectFn1 SyntheticEvent Unit, 
  onSeeked :: EffectFn1 SyntheticEvent Unit, 
  onSeekedCapture :: EffectFn1 SyntheticEvent Unit, 
  onSeeking :: EffectFn1 SyntheticEvent Unit, 
  onSeekingCapture :: EffectFn1 SyntheticEvent Unit, 
  onStalled :: EffectFn1 SyntheticEvent Unit, 
  onStalledCapture :: EffectFn1 SyntheticEvent Unit, 
  onSuspend :: EffectFn1 SyntheticEvent Unit, 
  onSuspendCapture :: EffectFn1 SyntheticEvent Unit, 
  onTimeUpdate :: EffectFn1 SyntheticEvent Unit, 
  onTimeUpdateCapture :: EffectFn1 SyntheticEvent Unit, 
  onVolumeChange :: EffectFn1 SyntheticEvent Unit, 
  onVolumeChangeCapture :: EffectFn1 SyntheticEvent Unit, 
  onWaiting :: EffectFn1 SyntheticEvent Unit, 
  onWaitingCapture :: EffectFn1 SyntheticEvent Unit, 
  onClick :: EffectFn1 SyntheticMouseEvent Unit, 
  onClickCapture :: EffectFn1 SyntheticMouseEvent Unit, 
  onContextMenu :: EffectFn1 SyntheticMouseEvent Unit, 
  onContextMenuCapture :: EffectFn1 SyntheticMouseEvent Unit, 
  onDoubleClick :: EffectFn1 SyntheticMouseEvent Unit, 
  onDoubleClickCapture :: EffectFn1 SyntheticMouseEvent Unit, 
  onDrag :: EffectFn1 SyntheticEvent Unit, 
  onDragCapture :: EffectFn1 SyntheticEvent Unit, 
  onDragEnd :: EffectFn1 SyntheticEvent Unit, 
  onDragEndCapture :: EffectFn1 SyntheticEvent Unit, 
  onDragEnter :: EffectFn1 SyntheticEvent Unit, 
  onDragEnterCapture :: EffectFn1 SyntheticEvent Unit, 
  onDragExit :: EffectFn1 SyntheticEvent Unit, 
  onDragExitCapture :: EffectFn1 SyntheticEvent Unit, 
  onDragLeave :: EffectFn1 SyntheticEvent Unit, 
  onDragLeaveCapture :: EffectFn1 SyntheticEvent Unit, 
  onDragOver :: EffectFn1 SyntheticEvent Unit, 
  onDragOverCapture :: EffectFn1 SyntheticEvent Unit, 
  onDragStart :: EffectFn1 SyntheticEvent Unit, 
  onDragStartCapture :: EffectFn1 SyntheticEvent Unit, 
  onDrop :: EffectFn1 SyntheticEvent Unit, 
  onDropCapture :: EffectFn1 SyntheticEvent Unit, 
  onMouseDown :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseDownCapture :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseEnter :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseLeave :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseMove :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseMoveCapture :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseOut :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseOutCapture :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseOver :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseOverCapture :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseUp :: EffectFn1 SyntheticMouseEvent Unit, 
  onMouseUpCapture :: EffectFn1 SyntheticMouseEvent Unit, 
  onSelect :: EffectFn1 SyntheticEvent Unit, 
  onSelectCapture :: EffectFn1 SyntheticEvent Unit, 
  onTouchCancel :: EffectFn1 SyntheticTouchEvent Unit, 
  onTouchCancelCapture :: EffectFn1 SyntheticTouchEvent Unit, 
  onTouchEnd :: EffectFn1 SyntheticTouchEvent Unit, 
  onTouchEndCapture :: EffectFn1 SyntheticTouchEvent Unit, 
  onTouchMove :: EffectFn1 SyntheticTouchEvent Unit, 
  onTouchMoveCapture :: EffectFn1 SyntheticTouchEvent Unit, 
  onTouchStart :: EffectFn1 SyntheticTouchEvent Unit, 
  onTouchStartCapture :: EffectFn1 SyntheticTouchEvent Unit, 
  onPointerDown :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerDownCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerMove :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerMoveCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerUp :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerUpCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerCancel :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerCancelCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerEnter :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerEnterCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerLeave :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerLeaveCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerOver :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerOverCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerOut :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onPointerOutCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onGotPointerCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onGotPointerCaptureCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onLostPointerCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onLostPointerCaptureCapture :: EffectFn1 Any {-- React.PointerEvent<interface HTMLElement>--} Unit, 
  onScroll :: EffectFn1 SyntheticUIEvent Unit, 
  onScrollCapture :: EffectFn1 SyntheticUIEvent Unit, 
  onWheel :: EffectFn1 SyntheticWheelEvent Unit, 
  onWheelCapture :: EffectFn1 SyntheticWheelEvent Unit, 
  onAnimationStart :: EffectFn1 SyntheticAnimationEvent Unit, 
  onAnimationStartCapture :: EffectFn1 SyntheticAnimationEvent Unit, 
  onAnimationEnd :: EffectFn1 SyntheticAnimationEvent Unit, 
  onAnimationEndCapture :: EffectFn1 SyntheticAnimationEvent Unit, 
  onAnimationIteration :: EffectFn1 SyntheticAnimationEvent Unit, 
  onAnimationIterationCapture :: EffectFn1 SyntheticAnimationEvent Unit, 
  onTransitionEnd :: EffectFn1 SyntheticTransitionEvent Unit, 
  onTransitionEndCapture :: EffectFn1 SyntheticTransitionEvent Unit, 
  component :: OneOf (
    typed :: Any {-- (props: "/home/doolse/git/purescript-react-mui/synctypes/node_modules/@material-ui/core/es/ButtonBase/ButtonBase".ButtonBaseProps<> | {children: boolean | undefined | null | string | number | {} | React.ReactElement<any> | React.ReactNodeArray<> | React.ReactPortal<>}, context: any => null | React.ReactElement<any>)--}, 
    typed :: String, 
    typed :: Any {-- React.ComponentClass<"/home/doolse/git/purescript-react-mui/synctypes/node_modules/@material-ui/core/es/ButtonBase/ButtonBase".ButtonBaseProps<>, any>--}
  ), 
  innerRef :: OneOf (
    typed :: Any {-- React.RefObject<any>--}, 
    typed :: String, 
    typed :: Any -> Any
  ), 
  download :: Any, 
  href :: String, 
  hrefLang :: String, 
  media :: String, 
  rel :: String, 
  target :: String, 
  type :: String, 
  autoFocus :: Boolean, 
  form :: String, 
  formAction :: String, 
  formEncType :: String, 
  formMethod :: String, 
  formNoValidate :: Boolean, 
  formTarget :: String, 
  name :: String, 
  value :: String, 
  action :: EffectFn1 Any {-- interface "/home/doolse/git/purescript-react-mui/synctypes/node_modules/@material-ui/core/es/ButtonBase/ButtonBase".ButtonBaseActions--} Unit, 
  buttonRef :: OneOf (
    typed :: Any {-- React.RefObject<any>--}, 
    typed :: String, 
    typed :: Any -> Any
  ), 
  centerRipple :: Boolean, 
  disableRipple :: Boolean, 
  disableTouchRipple :: Boolean, 
  focusRipple :: Boolean, 
  focusVisibleClassName :: String, 
  onFocusVisible :: EffectFn1 SyntheticFocusEvent Unit, 
  "TouchRippleProps" :: OneOf (
    typed :: Any {-- unknown--}, 
    typed :: Any {-- unknown--}
  ), 
  checked :: OneOf (
    typed :: String, 
    typed :: Boolean
  ), 
  inputProps :: Any {-- React.InputHTMLAttributes<interface HTMLInputElement>--}, 
  inputRef :: OneOf (
    typed :: Any {-- React.RefObject<any>--}, 
    typed :: String, 
    typed :: Any -> Any
  ), 
  readOnly :: Boolean, 
  required :: Boolean
 | r)

type RadioPropsM  = (
)

radio :: forall a. IsTSEq (Record a) (OptionRecord (RadioPropsO RadioPropsM) RadioPropsM) => Record a -> Array ReactElement -> ReactElement
radio = unsafeCreateElement classRadio

radio_ :: Array ReactElement -> ReactElement
radio_ = unsafeCreateElement classRadio {}

radio' :: forall a. IsTSEq (Record a) (OptionRecord (RadioPropsO RadioPropsM) RadioPropsM) => Record a -> ReactElement
radio' = unsafeCreateLeafElement classRadio